buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven'
        }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

plugins {
    id 'org.spongepowered.plugin' version '0.9.0'
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

group = 'com.github.mjra007'
version = '1.0-SNAPSHOT'
archivesBaseName = 'dragontravel'
def spongeforgejar = true

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

sourceSets {
    main {
        if(spongeforgejar){
            ext.refMap ='mixins.dragontravel.spongeforge.refmap.json'
        }else{
            ext.refMap ='mixins.dragontravel.spongevanilla.refmap.json'
        }

        resources{
            if(spongeforgejar){
                exclude 'mixins.dragontravel.spongevanilla.json'
            }else{
                exclude 'mixins.dragontravel.spongeforge.json'
            }
        }

        java {
            if(spongeforgejar){
                exclude 'com/github/mjra007/dragontravel/mixin/spongevanilla/**'
            }else{
                exclude 'com/github/mjra007/dragontravel/mixin/spongeforge/**'
                exclude 'com/github/mjra007/dragontravel/DragontravelMod.java'
            }
        }
    }
}

jar {

    manifest.attributes(
            'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
            'MixinConfigs': spongeforgejar ? 'mixins.dragontravel.spongeforge.json':'mixins.dragontravel.spongevanilla.json',
            'FMLCorePluginContainsFMLMod': 'true',
            'ForceLoadAsMod': 'true'
    )
 }

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'stable', version: '39-1.12'
   // makeObfSourceJar = true // an Srg named sources jar is made by default. uncomment this to disable.

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                dragontravelspongeforge {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                dragontravelspongeforge {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2854'
    compile 'org.spongepowered:spongeapi:7.3.0-SNAPSHOT'
    compile 'org.spongepowered:mixin:0.8.1-SNAPSHOT'

    // You may put jars on which you depend on in ./libs or you may define them like so..
    // compile "some.group:artifact:version:classifier"
    // compile "some.group:artifact:version"

    // Real examples
    // compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    // compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // The 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    // provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // These dependencies get remapped to your current MCP mappings
    // deobf 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // For more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
}


task copyJarToBin {
    copy {
        from 'build/libs/dragontravel-1.0-SNAPSHOT.jar'
        into 'D:/IntelijIdeaProjects/miningExpertise/run/forge/mods'
    }
}


jar.finalizedBy('reobfJar')
